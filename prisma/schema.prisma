// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum question_type {
  text
  image
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @unique
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String           @id @default(cuid())
  name           String?          @unique
  email          String?          @unique
  emailVerified  DateTime?
  role           role             @default(peserta)
  isNewUser      String?
  profession     String
  foto_profile   String?
  tgl_lahir      String?
  password       String
  no_pendaftaran String?          @unique // format yyyy-mm-dd-xxx
  biodata        biodataUser[]
  questions      question_banks[]
  accounts       Account[]
  sessions       Session[]
  nilaiTPA       nilaiTPA[]
  disc_answer    disc_answer[]
  papi_answer    papi_answer[]
  nilai_tpa_user nilai_tpa_user[]
  nilai_tkb_user nilai_tkb_user[]
}

model biodataUser {
  id                    String                     @id @unique @default(cuid())
  id_user               String?                    @unique
  user                  User?                      @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  nama_lengkap          String                     @unique
  jenis_kelamin         String
  agama                 String
  tanggal_lahir         String
  negara_lahir          String
  provinsi_lahir        String
  kota_lahir            String
  kewarganegaraan       String
  negara_asal           String
  nik                   String
  no_paspor             String?
  buta_warna            String
  kebutuhan_khusus      String
  negara                String
  provinsi              String
  kota                  String
  kecamatan             String
  alamat                String
  kode_pos              String
  no_telp_rumah         String
  email                 String
  no_ponsel             String
  no_wa                 String
  dataKeluarga          dataKeluarga[]
  pendidikan            pendidikanUser[]
  pengalamanKerja       pengalamanKerja[]
  keterampilan   keterampilanUser[]
  aktifitas_sosial      pengalamanOrganisasi[]
  sim                   simUser[]
  kerabat               kerabatUser[]
  sertifikat            serfitikatUser[]
  dokumen               dokumenUser[]
  status_pernikahan     String
  createdAt             String
  updatedAt             String
}

model kerabatUser {
  id        String        @id @unique @default(cuid())
  biodata   biodataUser[]
  nama      String
  alamat    String
  no_telp   String
  hubungan  String
  createdAt String
  updatedAt String
}

model simUser {
  id        String        @id @unique @default(cuid())
  biodata   biodataUser[]
  tipe_sim  String
  no_sim    String
  exp_sim   String
  createdAt String
  updatedAt String
}

model pendidikanUser {
  id                  String        @id @unique @default(cuid())
  biodata             biodataUser[]
  luar_negeri         String
  tipe_pendidikan     String
  pendidikan_terakhir String
  provinsi            String
  kota                String
  nama_institusi      String
  nama_jurusan        String
  no_ijazah           String
  tgl_terbit          String
  tahun_masuk         String
  tahun_lulus         String
  ipk                 String?
  createdAt           String
  updatedAt           String
}

model keterampilanUser {
  id         String        @id @unique @default(cuid())
  biodata    biodataUser[]
  tipe_keterampilan String
  nama_keterampilan String
  keterangan String
  createdAt  String
  updatedAt  String
}

model pengalamanOrganisasi {
  id              String        @id @unique @default(cuid())
  biodata         biodataUser[]
  nama_organisasi String
  jabatan         String
  tahun_masuk     String
  tahun_keluar    String
  detail          String?       @db.Text
  createdAt       String
  updatedAt       String
}

model dataKeluarga {
  id            String        @id @unique @default(cuid())
  biodata       biodataUser[]
  hubungan      String
  nama_lengkap  String
  jenis_kelamin String
  tempat_lahir  String
  tanggal_lahir String
  no_kk         String
  no_nik        String
  pekerjaan     String
  pendidikan    String
  createdAt     String
  updatedAt     String
}

model pengalamanKerja {
  id               String        @id @unique @default(cuid())
  biodata          biodataUser[]
  nama_perusahaan  String
  posisi           String
  gaji             String
  awal_masuk       String
  keluar           String
  uraian_pekerjaan String        @db.Text
  alasan_pindah    String        @db.Text
  createdAt        String
  updatedAt        String
}

model serfitikatUser {
  id               String        @id @unique @default(cuid())
  biodata          biodataUser[]
  jenis_sertifikat String // nasiaonal / internasional
  nama_sertifikat  String
  nama_org         String
  no_sertifikat    String
  negara_terbit    String
  tanggal_terbit   String
  tanggal_exp      String
  createdAt        String
  updatedAt        String
}

model dokumenUser {
  id String @id @unique @default(cuid())
  biodata biodataUser[]
  no_urut String
  nama_dokumen String
  status_dokumen String?
  file String @db.LongText
  createdAt String
  updatedAt String
}

enum options {
  Ya
  Tidak
  Parsial
}

enum role {
  superadmin
  hrd
  admin
  manager
  peserta
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model question_banks {
  id        String             @id @unique @default(cuid())
  question  String             @db.LongText
  type      question_type      @default(text)
  category  questionCategory[]
  required  Boolean
  createdBy User[]
  createdAt String
  updatedAt String
}

model questionCategory {
  id         String          @id @unique @default(cuid())
  name       String          @unique
  questionId String?         @unique
  question   question_banks? @relation(fields: [questionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdAt  String
  updatedAt  String
}

model soalTPA {
  id            Int     @id @unique @default(autoincrement())
  soal          String  @db.LongText
  a             String
  b             String
  c             String
  d             String
  kunci_jawaban String  @db.TinyText
  gambar        String?

  isAktif   String @db.VarChar(5)
  createdAt String
  updatedAt String
}

model nilaiTPA {
  id         Int    @id @unique @default(autoincrement())
  user       User[]
  benar      Int
  salah      Int
  nilai      Int
  keterangan String
  waktu      String
  createdAt  String
  updatedAt  String
}

model soalTKB {
  id            Int     @id @unique @default(autoincrement())
  soal          String  @db.LongText
  a             String
  b             String
  c             String
  point_a       String
  point_b       String
  point_c       String
  kunci_jawaban String  @db.TinyText
  isAktif       String  @db.VarChar(5)
  gambar        String?
  createdAt     String
  updatedAt     String
}

model soalBahasaInggris {
  id            Int     @id @unique @default(autoincrement())
  soal          String  @db.LongText
  a             String
  b             String
  c             String
  d             String
  kunci_jawaban String  @db.TinyText
  gambar        String?
  isAktif       Boolean @default(true)
  createdAt     String
  updatedAt     String
}

model disc_pattern {
  id          Int    @id @unique @default(autoincrement())
  type        String @db.TinyText
  pattern     String
  behaviour   String @db.LongText
  jobs        String @db.LongText
  description String @db.LongText
}

model disc_personalities {
  id    Int    @id @unique @default(autoincrement())
  no    Int
  term  String @db.Text
  most  String @db.TinyText
  least String @db.TinyText
}

model disc_result {
  id    Int   @id @unique @default(autoincrement())
  value Int
  d     Float
  i     Float
  s     Float
  c     Float
  line  Int   @db.TinyInt
}

model disc_answer {
  id      Int    @id @unique @default(autoincrement())
  id_user String
  user    User[]
  type    String
  val     String
}

model papi_answer {
  id      Int    @id @unique @default(autoincrement())
  id_user String
  user    User[]
  val     String
}

model papi_aspect {
  id         Int          @id @unique @default(autoincrement())
  aspect     String
  papi_roles papi_roles[]
}

model papi_questions {
  id        Int    @id @unique @default(autoincrement())
  question1 String
  value1    String @db.TinyText
  question2 String
  value2    String @db.TinyText
}

model papi_result {
  id      Int          @id @unique @default(autoincrement())
  id_user String
  role_id String
  role    papi_roles[]
  value   String       @db.TinyText
}

model papi_roles {
  id          Int           @id @unique @default(autoincrement())
  aspect_id   String
  aspect      papi_aspect[]
  code        String        @db.TinyText
  role        String
  papi_result papi_result[]
  rules       papi_rules[]
}

model papi_rules {
  id              Int          @id @unique @default(autoincrement())
  role_id         String
  roles           papi_roles[]
  low_value       Int          @db.TinyInt
  high_value      Int          @db.TinyInt
  interprestation String
}

model nilai_tpa_user {
  id         Int     @id @unique @default(autoincrement())
  id_user    String
  user       User[]
  benar      String
  salah      String
  kosong     String?
  score      String
  keterangan String?
  wm1        Int
  wm2        Int
  wm3        Int
  createdAt  String
}

model nilai_tkb_user {
  id         Int     @id @unique @default(autoincrement())
  id_user    String
  user       User[]
  benar      String
  salah      String
  kosong     String?
  score      String
  keterangan String?
  createdAt  String
}
