// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum question_type {
  text
  image
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @unique
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String                @id @default(cuid())
  name           String?               @unique
  email          String?               @unique
  emailVerified  DateTime?
  role           role                  @default(peserta)
  isNewUser      String?
  profession     String?
  foto_profile   String?
  tgl_lahir      String?
  password       String
  no_pendaftaran String?               @unique // format yyyy-mm-dd-xxx
  biodata        biodataUser[]
  accounts       Account[]
  scorePsikotest scoreTotalPsikotest[]
}

model soalVerbal {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalAntonim {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalSinonim {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalAntonimSinonim {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalDeret {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalhitungCepat {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  kunci_jawaban Int
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalInformasiSingkat {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  hint          String
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalKalimatTakTeratur {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalKemampuanTeknikal {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalKetelitian {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalKuantitatifAnalisis {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalPenalaranAnalitik {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalPenalaranLogis {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalKepribadian {
  id            Int       @id @unique @default(autoincrement())
  gambar        String?
  soal          String    @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  tipe_soal     tipe_soal @default(Bahasa_Indonesia)
  aktif         Boolean?  @default(true)
  createdAt     String
  updatedAt     String
}

model soalBahasaInggris {
  id            Int     @id @unique @default(autoincrement())
  gambar        String?
  soal          String  @db.LongText
  A             String
  B             String
  C             String
  D             String
  E             String?
  kunci_jawaban String
  aktif         Boolean @default(true)
  createdAt     String
  updatedAt     String
}

model settinganSoal {
  id                                    Int    @id @unique @default(autoincrement())
  waktu_pengerjaan_verbal               Int
  waktu_pengerjaan_antonim              Int
  waktu_pengerjaan_sinonim              Int
  waktu_pengerjaan_antonim_sinonim      Int
  waktu_pengerjaan_deret_angka          Int
  waktu_pengerjaan_hitung_cepat         Int
  waktu_pengerjaan_informasi_singkat    Int
  waktu_pengerjaan_kalimat_tak_teratur  Int
  waktu_pengerjaan_kemampuan_teknikal   Int
  waktu_pengerjaan_ketelitian           Int
  waktu_pengerjaan_kuantitatif_analisis Int
  waktu_pengerjaan_penalaran_logis      Int
  waktu_pengerjaan_penalaran_analitik   Int
  waktu_pengerjaan_kepribadian          Int
  waktu_pengerjaan_inggris              Int
  max_soal_verbal                       Int    @default(50)
  max_soal_antonim                       Int    @default(50)
  max_soal_sinonim                      Int    @default(50)
  max_soal_antonim_sinonim              Int    @default(50)
  max_soal_deret_angka                  Int    @default(50)
  max_soal_hitung_cepat                 Int    @default(50)
  max_soal_informasi_singkat            Int    @default(50)
  max_soal_kalimat_tak_teratur          Int    @default(50)
  max_soal_kemampuan_teknikal           Int    @default(50)
  max_soal_ketelitian                   Int    @default(50)
  max_soal_kuantitatif_analisis         Int    @default(50)
  max_soal_penalaran_logis              Int    @default(50)
  max_soal_penalaran_analitik           Int    @default(50)
  max_soal_kepribadian                  Int    @default(50)
  max_soal_bInggris                     Int    @default(50)
  schedule                              String
  createdAt                             String
}

model scoreVerbal {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreAntonim {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreSinonim {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreAntonimSinonim {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreDeretAngka {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreHitungCepat {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreInformasiSingkat {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreKalimatTakTeratur {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreKemampuanTeknikal {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreKetelitian {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scoreKuantitatifAnalisis {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scorePenalaranLogis {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
} 

model scorePenalaranAnalitik {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
}

model scoreKepribadian {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
}

model scoreInggris {
  id      Int    @id @unique @default(autoincrement())
  benar Int
  salah Int
  score Int
  scoreId Int @unique
  scoreTotal scoreTotalPsikotest? @relation(fields: [scoreId], references: [id])
}

model scoreTotalPsikotest {
  id         Int    @id @unique @default(autoincrement())
  id_user    String @unique
  user       User   @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  average    Int
  scoreVerbal scoreVerbal?
  scoreAntonim scoreAntonim?
  scoreSinonim scoreSinonim?
  scoreAntonimSinonim scoreAntonimSinonim?
  scoreDeretAngka scoreDeretAngka?
  scoreHitungCepat scoreHitungCepat?
  scoreInformasiSingkat scoreInformasiSingkat?
  scoreKalimatTakTeratur scoreKalimatTakTeratur?
  scoreKemampuanTeknikal scoreKemampuanTeknikal?
  scoreKetelitian scoreKetelitian?
  scoreKuantitatifAnalisis scoreKuantitatifAnalisis?
  scorePenalaranLogis scorePenalaranLogis?
  scorePenalaranAnalitik scorePenalaranAnalitik?
  scoreKepribadian scoreKepribadian?
  scoreInggris scoreInggris?
  scoreTotal Int
  createdAt  String
}

model settinganApi {
  id        Int    @id @unique @default(autoincrement())
  createdAt String
  updatedAt String
}

enum tipe_soal {
  Bahasa_Inggris
  Bahasa_Indonesia
}

model biodataUser {
  id                String                 @id @unique @default(cuid())
  id_user           String?                @unique
  user              User?                  @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  nama_lengkap      String                 @unique
  jenis_kelamin     String
  agama             String
  tanggal_lahir     String
  negara_lahir      String
  provinsi_lahir    String
  kota_lahir        String
  kewarganegaraan   String
  negara_asal       String
  nik               String
  no_paspor         String?
  buta_warna        String
  kebutuhan_khusus  String
  negara            String
  provinsi          String
  kota              String
  kecamatan         String
  alamat            String
  kode_pos          String
  no_telp_rumah     String
  email             String
  no_ponsel         String
  no_wa             String
  dataKeluarga      dataKeluarga[]
  pendidikan        pendidikanUser[]
  pengalamanKerja   pengalamanKerja[]
  keterampilan      keterampilanUser[]
  aktifitas_sosial  pengalamanOrganisasi[]
  sim               simUser[]
  kerabat           kerabatUser[]
  sertifikat        serfitikatUser[]
  dokumen           dokumenUser[]
  status_pernikahan String
  createdAt         String
  updatedAt         String
}

model kerabatUser {
  id        String        @id @unique @default(cuid())
  biodata   biodataUser[]
  nama      String
  alamat    String
  no_telp   String
  hubungan  String
  createdAt String
  updatedAt String
}

model simUser {
  id        String        @id @unique @default(cuid())
  biodata   biodataUser[]
  tipe_sim  String
  no_sim    String
  exp_sim   String
  createdAt String
  updatedAt String
}

model pendidikanUser {
  id                  String        @id @unique @default(cuid())
  biodata             biodataUser[]
  luar_negeri         String
  tipe_pendidikan     String
  pendidikan_terakhir String
  provinsi            String
  kota                String
  nama_institusi      String
  nama_jurusan        String
  no_ijazah           String
  tgl_terbit          String
  tahun_masuk         String
  tahun_lulus         String
  ipk                 String?
  createdAt           String
  updatedAt           String
}

model keterampilanUser {
  id                String        @id @unique @default(cuid())
  biodata           biodataUser[]
  tipe_keterampilan String
  nama_keterampilan String
  keterangan        String
  createdAt         String
  updatedAt         String
}

model pengalamanOrganisasi {
  id              String        @id @unique @default(cuid())
  biodata         biodataUser[]
  nama_organisasi String
  jabatan         String
  tahun_masuk     String
  tahun_keluar    String
  detail          String?       @db.Text
  createdAt       String
  updatedAt       String
}

model dataKeluarga {
  id            String        @id @unique @default(cuid())
  biodata       biodataUser[]
  hubungan      String
  nama_lengkap  String
  jenis_kelamin String
  tempat_lahir  String
  tanggal_lahir String
  no_kk         String
  no_nik        String
  pekerjaan     String
  pendidikan    String
  createdAt     String
  updatedAt     String
}

model pengalamanKerja {
  id               String        @id @unique @default(cuid())
  biodata          biodataUser[]
  nama_perusahaan  String
  posisi           String
  gaji             String
  awal_masuk       String
  keluar           String
  uraian_pekerjaan String        @db.Text
  alasan_pindah    String        @db.Text
  createdAt        String
  updatedAt        String
}

model serfitikatUser {
  id               String        @id @unique @default(cuid())
  biodata          biodataUser[]
  jenis_sertifikat String // nasiaonal / internasional
  nama_sertifikat  String
  nama_org         String
  no_sertifikat    String
  negara_terbit    String
  tanggal_terbit   String
  tanggal_exp      String
  createdAt        String
  updatedAt        String
}

model dokumenUser {
  id                     String        @id @unique @default(cuid())
  user_id                String        @unique
  biodata                biodataUser[]
  ktp                    String?
  npwp                   String?
  sim                    String?
  ijazah                 String?
  transkrip_nilai        String?
  kartu_keluarga         String?
  skck                   String?
  kartu_kuning           String?
  surat_pengalaman_kerja String?
  akta_kelahiran         String?
  cv                     String?
  pas_foto               String?
  sertifikat_keahlian    String?
  sertifikat_bahasa      String?
  buku_nikah             String?
  createdAt              String
  updatedAt              String
}

enum options {
  Ya
  Tidak
  Parsial
}

enum role {
  superadmin
  hrd
  admin
  manager
  peserta
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
